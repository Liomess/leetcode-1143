class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        def fun(self,s1: str,s2: str,m: int,n: int,dp: list) ->int:
            if m==0 or n==0:
                return 0
            if dp[m][n]!=-1:
                return dp[m][n]
            if s1[m-1]==s2[n-1]:
                dp[m][n]=1+fun(self,text1,text2,m-1,n-1,dp)
                return dp[m][n]
            else:
                dp[m][n]=max(fun(self,text1,text2,m-1,n,dp),fun(self,text1,text2,m,n-1,dp))
                return dp[m][n]
        
        m=len(text1)
        n=len(text2)
        dp=[[-1 for j in range(n+1)]for i in range(m+1)]
        return fun(self,text1,text2,m,n,dp)
        
